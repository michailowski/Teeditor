<sidebar:BoxControl
    xmlns:sidebar="using:Teeditor.Common.Views.Sidebar"
    x:Class="Teeditor.TeeWorlds.MapExtension.Internal.Views.Sidebar.ExplorerBoxControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    xmlns:behaviors="using:Teeditor.TeeWorlds.MapExtension.Internal.Behaviors"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:models="using:Teeditor.TeeWorlds.MapExtension.Internal.Models.Data"
    xmlns:helpers="using:Teeditor.Common.Helpers"
    d:DesignHeight="300"
    d:DesignWidth="400">

    <sidebar:BoxControl.Resources>
        <ResourceDictionary>

            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="ms-appx:///Teeditor.TeeWorlds.MapExtension/Internal/Resources/Sidebar/SidebarStyles.xaml" />
                <ResourceDictionary Source="ms-appx:///Teeditor.TeeWorlds.MapExtension/Internal/Resources/Sidebar/ExplorerBoxListViewStyles.xaml"/>
                <ResourceDictionary Source="ms-appx:///Teeditor.TeeWorlds.MapExtension/Internal/Resources/Sidebar/ExplorerBoxToggleButtonStyles.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <CommandBarFlyout x:Name="CommonGroupContextFlyout" Placement="RightEdgeAlignedTop">
                <CommandBarFlyout.SecondaryCommands>
                    <AppBarButton Icon="Repair" Label="Properties" Click="PropertiesBtn_Click" />
                    <AppBarButton Icon="Delete" Label="Remove Group" Click="RemoveGroupBtn_Click" />
                    <AppBarSeparator/>
                    <AppBarButton Icon="HideBcc" Label="Minimize All but This" Click="MinimizeOtherGroupsBtn_Click"/>
                    <AppBarSeparator/>
                    <AppBarButton Icon="Stop" Label="Add Tile Layer" Click="CreateTilesLayerBtn_Click"/>
                    <AppBarButton Icon="Placeholder" Label="Add Quad Layer" Click="CreateQuadsLayerBtn_Click"/>
                </CommandBarFlyout.SecondaryCommands>
            </CommandBarFlyout>

            <CommandBarFlyout x:Name="GameGroupContextFlyout" Placement="RightEdgeAlignedTop">
                <CommandBarFlyout.SecondaryCommands>
                    <AppBarButton Icon="Clear" Label="Clean-Up Game Tiles" />
                    <AppBarSeparator/>
                    <AppBarButton Icon="HideBcc" Label="Minimize All but This" Click="MinimizeOtherGroupsBtn_Click"/>
                    <AppBarSeparator/>
                    <AppBarButton Icon="Stop" Label="Add Tile Layer" Click="CreateTilesLayerBtn_Click"/>
                    <AppBarButton Icon="Placeholder" Label="Add Quad Layer" Click="CreateQuadsLayerBtn_Click"/>
                </CommandBarFlyout.SecondaryCommands>
            </CommandBarFlyout>

            <CommandBarFlyout x:Name="CommonLayerContextFlyout" Placement="RightEdgeAlignedTop">
                <CommandBarFlyout.SecondaryCommands>
                    <AppBarButton Icon="Repair" Label="Properties" Click="PropertiesBtn_Click" />
                    <AppBarButton Icon="Delete" Label="Remove Layer" Click="RemoveLayerBtn_Click" />
                </CommandBarFlyout.SecondaryCommands>
            </CommandBarFlyout>

            <CommandBarFlyout x:Name="GameLayerContextFlyout" Placement="RightEdgeAlignedTop">
                <CommandBarFlyout.SecondaryCommands>
                    <AppBarButton Icon="Repair" Label="Properties" Click="PropertiesBtn_Click" />
                </CommandBarFlyout.SecondaryCommands>
            </CommandBarFlyout>

            <MenuFlyout x:Name="BoxMenuFlyout" Placement="BottomEdgeAlignedRight">
                <MenuFlyoutItem Text="Create Group" Click="CreateGroupBtn_Click">
                    <MenuFlyoutItem.Icon>
                        <FontIcon Glyph="&#xECCD;"/>
                    </MenuFlyoutItem.Icon>
                    <MenuFlyoutItem.KeyboardAccelerators>
                        <KeyboardAccelerator Key="G" Modifiers="Control"/>
                    </MenuFlyoutItem.KeyboardAccelerators>
                </MenuFlyoutItem>
                <MenuFlyoutItem Text="Edit Map Properties" Icon="Repair" Click="MapPropertiesBtn_Click" />
                <MenuFlyoutSeparator/>
                <MenuFlyoutItem Icon="HideBcc" Text="Minimize All Groups" Click="MinimizeAllGroupsBtn_Click"/>
                <MenuFlyoutItem Icon="ShowBcc" Text="Maximize All Groups" Click="MaximizeAllGroupsBtn_Click"/>
            </MenuFlyout>

        </ResourceDictionary>
    </sidebar:BoxControl.Resources>

    <ListView x:Name="GroupsListView" MinWidth="235" Padding="0,0,0,20"
                          ItemContainerStyle="{StaticResource ListViewGroupItemContainerStyle}"
                          ItemsSource="{x:Bind ViewModel.GroupedLayersContainer.Groups, Mode=OneWay}"
                          AllowDrop="True" CanReorderItems="True"
                          PreviewKeyDown="GroupsListView_PreviewKeyDown">

        <ListView.ItemTemplate>
            
            <DataTemplate x:DataType="models:MapGroup">
                
                <ListViewItem x:Name="GroupItem" 
                    AutomationProperties.Name="{x:Bind Name, Mode=OneWay}"
                    AllowDrop="True" CanDrag="True"
                    HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Padding="0"
                    IsSelected="{x:Bind IsSelected, Mode=TwoWay}">

                    <Grid>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="35"></RowDefinition>
                            <RowDefinition Height="Auto"></RowDefinition>
                        </Grid.RowDefinitions>

                        <Grid Grid.Row="0">

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="35"></ColumnDefinition>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                            </Grid.ColumnDefinitions>

                            <Grid x:Name="ExpandCollapseChevron"
                                    Grid.Column="0"
                                    Width="Auto"
                                    Visibility="{x:Bind helpers:DataConverterHelper.BoolToVisibility(HasLayers), Mode=OneWay}"
                                    Background="Transparent">

                                <TextBlock Foreground="{ThemeResource ExplorerBoxExpandCollapseChevronForeground}"
                                    HorizontalTextAlignment="Center"
                                    VerticalAlignment="Center"
                                    Visibility="{x:Bind helpers:DataConverterHelper.BoolToVisibility(IsExpanded), Mode=OneWay}"
                                    FontSize="8" Text="&#xE76C;"
                                    FontFamily="{StaticResource SymbolThemeFontFamily}"
                                    AutomationProperties.AccessibilityView="Raw"
                                    IsTextScaleFactorEnabled="False"
                                    IsHitTestVisible="False"/>

                                <TextBlock Foreground="{ThemeResource ExplorerBoxExpandCollapseChevronForeground}"
                                    HorizontalTextAlignment="Center"
                                    VerticalAlignment="Center"
                                    Visibility="{x:Bind helpers:DataConverterHelper.BoolToVisibilityInverted(IsExpanded), Mode=OneWay}"
                                    FontSize="8"
                                    Text="&#xE70D;"
                                    FontFamily="{StaticResource SymbolThemeFontFamily}"
                                    AutomationProperties.AccessibilityView="Raw"
                                    IsTextScaleFactorEnabled="False"
                                    IsHitTestVisible="False"/>
                            </Grid>

                            <TextBlock x:Name="GroupName" Grid.Column="1" Text="{Binding Name}" Foreground="{ThemeResource ExplorerBoxGroupItemNameForeground}" VerticalAlignment="Center" FontSize="12" FontWeight="SemiBold"/>

                            <TextBlock Grid.Column="2" FontSize="11" FontWeight="Normal" 
                                       VerticalAlignment="Center" Margin="10,0" 
                                       Foreground="{ThemeResource ExplorerBoxGroupItemNumberForeground}">
                                
                                <Run Text="#"/><Run Text="{Binding ElementName=GroupItem, Path=Tag}"/>
                                
                            </TextBlock>

                            <StackPanel x:Name="Buttons" Orientation="Horizontal" Grid.Column="3" Width="0">

                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="35"/>
                                        <ColumnDefinition Width="35"/>
                                    </Grid.ColumnDefinitions>

                                    <ToggleButton Style="{StaticResource ExplorerBoxToggleButtonStyle}" Grid.Column="0"
                                  IsChecked="{x:Bind IsVisible, Mode=TwoWay}">
                                        <ToggleButton.Content>
                                            <Grid>
                                                <PathIcon Data="{StaticResource ResourceKey=VisibleIconPath}" Visibility="{x:Bind helpers:DataConverterHelper.BoolToVisibility(IsVisible), Mode=OneWay}"/>
                                                <PathIcon Data="{StaticResource ResourceKey=NotVisibleIconPath}" Visibility="{x:Bind helpers:DataConverterHelper.BoolToVisibilityInverted(IsVisible), Mode=OneWay}"/>
                                            </Grid>
                                        </ToggleButton.Content>
                                    </ToggleButton>

                                    <ToggleButton Style="{StaticResource ExplorerBoxToggleButtonStyle}" Grid.Column="1"
                                      IsChecked="{x:Bind IsSaved, Mode=TwoWay}">
                                        <ToggleButton.Content>
                                            <Grid>
                                                <PathIcon Data="{StaticResource ResourceKey=SaveIconPath}" Visibility="{x:Bind helpers:DataConverterHelper.BoolToVisibility(IsSaved), Mode=OneWay}"/>
                                                <PathIcon Data="{StaticResource ResourceKey=NotSaveIconPath}" Visibility="{x:Bind helpers:DataConverterHelper.BoolToVisibilityInverted(IsSaved), Mode=OneWay}"/>
                                            </Grid>
                                        </ToggleButton.Content>
                                    </ToggleButton>
                                </Grid>
                            </StackPanel>

                        </Grid>

                        <ListView Name="LayersListView" Grid.Row="1"
                            ItemsSource="{x:Bind Layers, Mode=OneWay}"
                            ItemContainerStyle="{StaticResource ListViewLayerItemContainerStyle}"
                            Visibility="{x:Bind helpers:DataConverterHelper.BoolToVisibilityInverted(IsExpanded), Mode=OneWay}"
                            AllowDrop="True" CanReorderItems="True">

                            <ListView.ItemTemplate>

                                <DataTemplate x:DataType="models:MapLayer">
                                    
                                    <ListViewItem AutomationProperties.Name="{x:Bind Name}"
                                        AllowDrop="False" CanDrag="True"
                                        IsSelected="{x:Bind IsSelected, Mode=TwoWay}"
                                        MinHeight="30" Padding="0"
                                        VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch">
                                        
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="50"></ColumnDefinition>
                                                <ColumnDefinition Width="*"></ColumnDefinition>
                                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                            </Grid.ColumnDefinitions>

                                            <Rectangle x:Name="SelectionMarker" Grid.Column="0" 
                                                Fill="{ThemeResource ExplorerBoxSelectionMarkerFill}"
                                                VerticalAlignment="Center" Margin="12,0,0,0"
                                                Width="4" Height="15" RadiusX="2" RadiusY="2"
                                                HorizontalAlignment="Left" Opacity="0">

                                                <interactivity:Interaction.Behaviors>
                                                    <core:DataTriggerBehavior Binding="{x:Bind IsSelected, Mode=OneWay}" Value="False">
                                                        <core:ChangePropertyAction PropertyName="Opacity" Value="0" />
                                                    </core:DataTriggerBehavior>
                                                    <core:DataTriggerBehavior Binding="{x:Bind IsSelected, Mode=OneWay}" Value="True">
                                                        <core:ChangePropertyAction PropertyName="Opacity" Value="0.5" />
                                                    </core:DataTriggerBehavior>
                                                </interactivity:Interaction.Behaviors>
                                            </Rectangle>

                                            <TextBlock Grid.Column="1" Text="{x:Bind Name}" FontSize="12" Foreground="{ThemeResource ExplorerBoxLayerItemNameForeground}" VerticalAlignment="Center"/>

                                            <StackPanel x:Name="Buttons" Orientation="Horizontal" Grid.Column="2" Width="0">

                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="30"/>
                                                        <ColumnDefinition Width="30"/>
                                                    </Grid.ColumnDefinitions>

                                                    <ToggleButton Style="{StaticResource ExplorerBoxToggleButtonStyle}" Grid.Column="0"
                                                        IsChecked="{x:Bind IsVisible, Mode=TwoWay}">
                                                        <ToggleButton.Content>
                                                            <Grid>
                                                                <PathIcon Data="{StaticResource ResourceKey=VisibleIconPath}" Visibility="{x:Bind helpers:DataConverterHelper.BoolToVisibility(IsVisible), Mode=OneWay}"/>
                                                                <PathIcon Data="{StaticResource ResourceKey=NotVisibleIconPath}" Visibility="{x:Bind helpers:DataConverterHelper.BoolToVisibilityInverted(IsVisible), Mode=OneWay}"/>
                                                            </Grid>
                                                        </ToggleButton.Content>
                                                    </ToggleButton>

                                                    <ToggleButton Style="{StaticResource ExplorerBoxToggleButtonStyle}" Grid.Column="1"
                                                        IsChecked="{x:Bind IsSaved, Mode=TwoWay}">
                                                        <ToggleButton.Content>
                                                            <Grid>
                                                                <PathIcon Data="{StaticResource ResourceKey=SaveIconPath}" Visibility="{x:Bind helpers:DataConverterHelper.BoolToVisibility(IsSaved), Mode=OneWay}"/>
                                                                <PathIcon Data="{StaticResource ResourceKey=NotSaveIconPath}" Visibility="{x:Bind helpers:DataConverterHelper.BoolToVisibilityInverted(IsSaved), Mode=OneWay}"/>
                                                            </Grid>
                                                        </ToggleButton.Content>
                                                    </ToggleButton>

                                                </Grid>

                                            </StackPanel>

                                        </Grid>
                                        <interactivity:Interaction.Behaviors>
                                            <behaviors:LayerItemListViewBehavior />
                                            <core:DataTriggerBehavior Binding="{x:Bind IsVisible, Mode=OneWay}" Value="False">
                                                <core:ChangePropertyAction PropertyName="Opacity" Value="0.5" />
                                            </core:DataTriggerBehavior>
                                            <core:DataTriggerBehavior Binding="{x:Bind IsVisible, Mode=OneWay}" Value="True">
                                                <core:ChangePropertyAction PropertyName="Opacity" Value="1" />
                                            </core:DataTriggerBehavior>
                                        </interactivity:Interaction.Behaviors>
                                    </ListViewItem>
                                </DataTemplate>

                            </ListView.ItemTemplate>
                            
                            <interactivity:Interaction.Behaviors>
                                <behaviors:LayersListViewBehavior />
                            </interactivity:Interaction.Behaviors>
                        </ListView>
                    </Grid>

                    <interactivity:Interaction.Behaviors>
                        <behaviors:GroupItemListViewBehavior />
                        <core:DataTriggerBehavior Binding="{x:Bind IsVisible, Mode=OneWay}" Value="False">
                            <core:ChangePropertyAction PropertyName="Opacity" Value="0.5" />
                        </core:DataTriggerBehavior>
                        <core:DataTriggerBehavior Binding="{x:Bind IsVisible, Mode=OneWay}" Value="True">
                            <core:ChangePropertyAction PropertyName="Opacity" Value="1" />
                        </core:DataTriggerBehavior>
                    </interactivity:Interaction.Behaviors>
                </ListViewItem>
            </DataTemplate>
        </ListView.ItemTemplate>

        <interactivity:Interaction.Behaviors>
            <behaviors:GroupsListViewBehavior />
        </interactivity:Interaction.Behaviors>
    </ListView>
    
</sidebar:BoxControl>
